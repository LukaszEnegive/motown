<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:axon-amqp="http://www.axonframework.org/schema/amqp"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.axonframework.org/schema/amqp http://www.axonframework.org/schema/axon-amqp.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="random" class="java.util.Random"/>

    <bean id="gson" class="io.motown.operatorapi.json.gson.GsonFactoryBean">
        <property name="dateFormat" value="yyyy-MM-dd'T'HH:mm:ss'Z'"/>
        <property name="typeAdapters">
            <set>
                <bean class="io.motown.operatorapi.json.gson.EvseIdTypeAdapter"/>
                <bean class="io.motown.operatorapi.json.gson.TextualTokenTypeAdapter"/>
                <bean class="io.motown.operatorapi.json.gson.CoordinatesTypeAdapter"/>
                <bean class="io.motown.operatorapi.json.gson.AddressTypeAdapter"/>
                <bean class="io.motown.operatorapi.json.gson.OpeningTimeTypeAdapter"/>
                <bean class="io.motown.operatorapi.json.gson.AccessibilityTypeAdapter"/>
            </set>
        </property>
    </bean>

    <!--<jpa:repositories base-package="io.motown.operatorapi.viewmodel.persistence.repositories"/>-->


    <bean id="chargingStationRepository" class="io.motown.operatorapi.viewmodel.persistence.repositories.ChargingStationRepository">
        <property name="entityManager" ref="entityManager" />
    </bean>

    <bean id="transactionRepository" class="io.motown.operatorapi.viewmodel.persistence.repositories.TransactionRepository">
        <property name="entityManager" ref="entityManager" />
    </bean>


    <bean class="io.motown.operatorapi.viewmodel.ChargingStationEventListener">
        <property name="repository" ref="chargingStationRepository" />
        <property name="transactionRepository" ref="transactionRepository" />
    </bean>

    <bean id="jsonCommandService" class="io.motown.operatorapi.json.commands.JsonCommandService">
        <property name="gson" ref="gson" />
        <property name="jsonCommandHandlers" ref="jsonCommandHandlers" />
    </bean>

    <bean id="operatorApiService" class="io.motown.operatorapi.json.queries.OperatorApiService">
        <property name="repository" ref="chargingStationRepository" />
        <property name="transactionRepository" ref="transactionRepository" />
    </bean>

    <util:list id="jsonCommandHandlers">
        <bean class="io.motown.operatorapi.json.commands.AddChargingStationOpeningTimesJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.ChangeConfigurationJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.ConfigureJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.DataTransferJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.ImproveChargingStationLocationJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.MoveChargingStationJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.PlaceChargingStationJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RegisterJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestAuthorizationListVersionJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestChangeChargingStationAvailabilityJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestClearCacheJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestDiagnosticsJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestReserveNowJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestResetChargingStationJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestStartTransactionJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.RequestStopTransactionJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.SendAuthorizationListJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <!--<property name="repository" ref="chargingStationRepository" />-->
        </bean>
        <bean class="io.motown.operatorapi.json.commands.SetChargingStationOpeningTimesJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.UnlockEvseJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.UpdateChargingStationReservableJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
        <bean class="io.motown.operatorapi.json.commands.UpdateFirmwareJsonCommandHandler">
            <property name="commandGateway" ref="domainCommandGateway" />
            <property name="gson" ref="gson" />
            <property name="repository" ref="chargingStationRepository" />
        </bean>
    </util:list>

    <bean id="domainCommandGateway" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
        <property name="gatewayInterface" value="io.motown.operatorapi.json.commands.DomainCommandGateway"/>
    </bean>

    <bean id="commandBus" class="org.axonframework.commandhandling.distributed.DistributedCommandBus">
        <constructor-arg ref="jgroupsConnector"/>
    </bean>

    <bean id="jgroupsConnector"
          class="org.axonframework.commandhandling.distributed.jgroups.JGroupsConnectorFactoryBean">
        <property name="configuration" value="flush-udp.xml"/>
        <property name="clusterName" value="io.motown.commands"/>
        <property name="localSegment">
            <axon:command-bus/>
        </property>
        <property name="serializer" ref="serializer"/>
    </bean>

    <context:property-placeholder location="classpath:config.properties, file:${io.motown.operatorapi.config}"
                                  ignore-resource-not-found="true"/>

    <bean id="applicationContextProvider" class="io.motown.operatorapi.viewmodel.spring.ApplicationContextProvider" />

    <bean id="asyncExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="1"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <!-- Axon -->

    <axon:annotation-config/>

    <axon:event-bus id="eventBus" terminal="terminal"/>

    <axon-amqp:terminal id="terminal"
                        connection-factory="amqpConnection"
                        serializer="serializer"
                        exchange-name="${io.motown.operatorapi.json.eventbus.amqp.rabbit.exchange.name}">
        <axon-amqp:default-configuration />
    </axon-amqp:terminal>

    <axon:cluster id="cluster" default="true">
        <bean class="org.axonframework.eventhandling.async.AsynchronousCluster">
            <constructor-arg value="${io.motown.operatorapi.json.eventbus.amqp.rabbit.queue.name}"/>
            <constructor-arg ref="asyncExecutor"/>
            <constructor-arg>
                <bean class="org.axonframework.eventhandling.async.FullConcurrencyPolicy"/>
            </constructor-arg>
        </bean>
    </axon:cluster>

    <bean id="serializer" class="org.axonframework.serializer.xml.XStreamSerializer"/>

    <!-- AMQP -->

    <rabbit:connection-factory id="amqpConnection"
                               username="${io.motown.operatorapi.json.eventbus.amqp.rabbit.username}"
                               password="${io.motown.operatorapi.json.eventbus.amqp.rabbit.password}"
                               virtual-host="${io.motown.operatorapi.json.eventbus.amqp.rabbit.virtualhost}"
                               host="${io.motown.operatorapi.json.eventbus.amqp.rabbit.host}"/>

    <rabbit:admin id="amqpAdmin"
                  connection-factory="amqpConnection"/>

    <rabbit:queue id="queue"
                  name="${io.motown.operatorapi.json.eventbus.amqp.rabbit.queue.name}"
                  durable="true"/>

    <rabbit:fanout-exchange id="exchange"
                            name="${io.motown.operatorapi.json.eventbus.amqp.rabbit.exchange.name}"
                            durable="true">
        <rabbit:bindings>
            <rabbit:binding queue="queue"/>
        </rabbit:bindings>
    </rabbit:fanout-exchange>

    <!-- Spring Data JPA -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="io.motown.operatorapi.viewmodel.persistence"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
    </bean>

    <bean id="entityManager" factory-bean="entityManagerFactory" factory-method="createEntityManager" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <jdbc:embedded-database id="dataSource" type="HSQL"/>

</beans>
