<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.axonframework.org/schema/core http://www.axonframework.org/schema/axon-core.xsd
                           http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd">

    <context:property-placeholder location="classpath:configViewModel.properties"
                                  ignore-resource-not-found="true"
                                  ignore-unresolvable="true"/>

    <bean class="io.motown.ocpp.viewmodel.OcppEventHandler">
        <property name="chargingStationRepository">
            <bean class="io.motown.ocpp.viewmodel.persistence.repositories.ChargingStationRepository">
                <property name="entityManagerFactory" ref="entityManagerFactory" />
            </bean>
        </property>
    </bean>

    <bean id="userIdentitiesWithAllPermissions" class="java.util.HashSet">
        <constructor-arg>
            <set>
                <bean class="io.motown.domain.api.security.SimpleUserIdentity">
                    <constructor-arg name="identity" value="root" />
                </bean>
            </set>
        </constructor-arg>
    </bean>

    <bean id="domainService" class="io.motown.ocpp.viewmodel.domain.DomainService">
        <property name="chargingStationRepository" ref="chargingStationRepositoryOcppWebServices" />
        <property name="commandGateway" ref="domainCommandGateway" />
        <!-- "Event waiting gateway" should be defined by the Spring context that incorporates this one -->
        <property name="eventWaitingGateway" ref="eventWaitingGateway" />
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="heartbeatInterval" value="${io.motown.ocpp.viewmodel.heartbeat.interval}" />
        <property name="reservationIdentifierRepository" ref="reservationIdentifierRepositoryOcppWebServices" />
        <property name="transactionRepository" ref="transactionRepositoryOcppWebServices" />
        <property name="userIdentitiesWithAllPermissions" ref="userIdentitiesWithAllPermissions"/>
    </bean>

    <bean id="domainCommandGateway" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
        <property name="gatewayInterface" value="io.motown.ocpp.viewmodel.domain.DomainCommandGateway"/>
    </bean>

    <bean id="configurationCommandGateway" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
        <property name="gatewayInterface" value="io.motown.ocpp.viewmodel.configuration.ConfigurationCommandGateway"/>
    </bean>

    <bean id="beanValidationInterceptor" class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor"/>

    <bean id="commandBus"
          class="org.axonframework.commandhandling.distributed.DistributedCommandBus">
        <constructor-arg ref="jgroupsConnector"/>
        <property name="CommandDispatchInterceptors" ref="beanValidationInterceptor"/>
    </bean>

    <bean id="jgroupsConnector"
          class="org.axonframework.commandhandling.distributed.jgroups.JGroupsConnectorFactoryBean">
        <property name="configuration"
                  value="flush-udp.xml"/>
        <property name="clusterName"
                  value="io.motown.commands"/>
        <property name="localSegment">
            <axon:command-bus/>
        </property>
        <property name="serializer">
            <bean class="org.axonframework.serializer.xml.XStreamSerializer"/>
        </property>
    </bean>

    <bean id="asyncExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean">
        <property name="corePoolSize" value="1"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <bean id="serializer" class="org.axonframework.serializer.xml.XStreamSerializer"/>

    <!--<bean id="eventListener"-->
          <!--class="org.axonframework.eventhandling.annotation.AnnotationEventListenerAdapter">-->
        <!--<constructor-arg name="annotatedEventListener" value="ocppRequestHandler"/>-->
        <!--<constructor-arg name="eventBus" ref="eventBus"/>-->
    <!--</bean>-->

    <!-- Spring Data JPA -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="io.motown.ocpp.viewmodel.persistence.entities"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="HSQL"/>
                <property name="generateDdl" value="true"/>
            </bean>
        </property>
    </bean>

    <bean id="chargingStationRepositoryOcppWebServices" class="io.motown.ocpp.viewmodel.persistence.repositories.ChargingStationRepository">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="reservationIdentifierRepositoryOcppWebServices" class="io.motown.ocpp.viewmodel.persistence.repositories.ReservationIdentifierRepository">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="transactionRepositoryOcppWebServices" class="io.motown.ocpp.viewmodel.persistence.repositories.TransactionRepository">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <jdbc:embedded-database id="dataSource" type="HSQL"/>

</beans>
